<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             x:Class="RepportingApp.App"
             xmlns:local="using:RepportingApp"
             xmlns:viewModels="clr-namespace:RepportingApp.ViewModels"
             xmlns:helper="clr-namespace:RepportingApp.Helper"
             xmlns:converters="clr-namespace:RepportingApp.Converters"
             RequestedThemeVariant="Light">
             <!-- "Default" ThemeVariant follows system theme variant. "Dark" or "Light" are other available options. -->

    <Application.DataTemplates>
        <local:ViewLocator/>
    </Application.DataTemplates>
  
    <Application.Styles>
        <FluentTheme />
        <StyleInclude Source="avares://RepportingApp/Assets/icons.axaml"></StyleInclude>
        <StyleInclude Source="avares://RepportingApp/Assets/Colors.axaml"></StyleInclude>
        <StyleInclude Source="avares://Avalonia.Controls.DataGrid/Themes/Fluent.xaml"></StyleInclude>
    </Application.Styles>

     <Application.Resources>
         <ResourceDictionary>
             <ResourceDictionary.MergedDictionaries>
                 <ResourceInclude Source="avares://LoadingIndicators.Avalonia/LoadingIndicators.axaml" />
             </ResourceDictionary.MergedDictionaries>
         </ResourceDictionary>
         <FontFamily x:Key="Roboto">avares://RepportingApp/Assets/Font#Roboto</FontFamily>
         <helper:BooleanToWidthConverter x:Key="BooleanToWidthConverter"/>
         <converters:BooleanToBrushConverter x:Key="BooleanToBrushConverter"/>
         <converters:BooleanToTextConverter x:Key="BooleanToTextConverter"/>
         <helper:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
         <helper:EnumToBooleanConverter x:Key="EnumToBooleanConverter "/>
         <helper:SelectedBackgroundConverter x:Key="SelectedBackgroundConverter"/>
         <helper:SelectedForgroundConverter x:Key="SelectedForgroundConverter"/>
         <helper:IconNameToResourceConverter x:Key="IconNameToResourceConverter"/>
         <helper:TaskInfoTypeToVisibilityConverter x:Key="TaskInfoTypeToVisibilityConverter"/>
         <helper:CheckedToFillConverter x:Key="CheckedToFillConverter"/>
         <helper:InverseCheckedConverter x:Key="InverseCheckedConverter"/>
         <helper:GroupNameToColorConverter x:Key="GroupNameToColorConverter"/>
         <converters:ForegroundColorConverter x:Key="ForegroundColorConverter"/>
         <converters:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter"/>
         <converters:BooleanToColorConverter x:Key="BooleanToColorConverter" />
         
         <converters:WorkingStatusToColorConverter x:Key="WorkingStatusToColorConverter"/>
         
         
         <ControlTheme x:Key="CustomInput" TargetType="TextBox">
             <Setter Property="Background" Value="#F5F5F5" /> <!-- Light grey background -->
             <Setter Property="Foreground" Value="#9E9E9E" /> <!-- Darker grey for text -->
             <Setter Property="BorderBrush" Value="#D1D1D1" /> <!-- Border color -->
             <Setter Property="BorderThickness" Value="1" />
             <Setter Property="CornerRadius" Value="15" /> <!-- Rounded corners -->
             <Setter Property="Padding" Value="10" /> <!-- Padding for inner spacing -->
             <Setter Property="Watermark" Value="Type your question..."/>
         </ControlTheme>
         <ControlTheme x:Key="CustomRadioButtonTheme" TargetType="RadioButton">
            <!-- Default styles for RadioButton -->
            <Setter Property="Background" Value="{StaticResource LightGrey}" />
            <Setter Property="Foreground" Value="{StaticResource Secondary}" />
            <Setter Property="Padding" Value="12" />
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="Template">
        <ControlTemplate>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    Padding="10"
                    Cursor="Hand"
                    CornerRadius="{TemplateBinding CornerRadius}">
                <Grid ColumnDefinitions="16,9,*"
                      RowDefinitions="20,10,*"
                     >
                    <Ellipse Width="16" Height="16"
                             Stroke="{TemplateBinding BorderBrush}"
                             Fill="{TemplateBinding Foreground}">
                    </Ellipse>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{TemplateBinding Tag}" 
                               FontWeight="Bold"
                               TextWrapping="Wrap"
                               Foreground="{TemplateBinding Foreground}" />
                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{TemplateBinding Content}" 
                               FontSize="12"
                               TextWrapping="Wrap"
                               Foreground="{TemplateBinding Foreground}" />
                </Grid>
            </Border>
        </ControlTemplate>
    </Setter>

    <!-- PointerOver state -->
    <Style Selector="^:pointerover">
        <Setter Property="Background" Value="{StaticResource MainWhite}" />
        <Setter Property="BorderBrush" Value="{StaticResource Primary}" />
        <Setter Property="Foreground" Value="{StaticResource Primary}" />
    </Style>
    <Styles>
        <Style Selector="ComboBox">
            <Setter Property="Background" Value="#F5F5F5"/>
            <Setter Property="CornerRadius" Value="20"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="BorderBrush" Value="#D0D0D0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style Selector="ComboBoxItem">
            <Setter Property="Padding" Value="10,5"/>
        </Style>
    </Styles>
    <!-- Checked state -->
    <Style Selector="^:checked">
        <Setter Property="Background" Value="{StaticResource LightOrange}" />
        <Setter Property="BorderBrush" Value="{StaticResource Primary}" />
        <Setter Property="Foreground" Value="{StaticResource MainWhite}" />
    </Style>
</ControlTheme>

      
         <ControlTheme x:Key="CustomBtn" TargetType="Button">
             <!-- Default styles for Button -->
             <Setter Property="Background" Value="{StaticResource MainWhite}" />
             <Setter Property="Foreground" Value="{StaticResource Secondary}" />
             <Setter Property="Cursor" Value="Hand" />
             <Setter Property="Padding" Value="8" />
             <Setter Property="Template">
                 <ControlTemplate>
                     <Border Background="{TemplateBinding Background}">
                         <ContentPresenter x:Name="PART_ContentPresenter"
                                           Content="{TemplateBinding Content}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Margin="{TemplateBinding Padding}" />
                     </Border>
                 </ControlTemplate>
             </Setter>

             <!-- PointerOver state -->
             <Style Selector="^:pointerover">
                 <Setter Property="Background" Value="{StaticResource MainWhite}" />
                 <Setter Property="Foreground" Value="{StaticResource Secondary}" />
                 <Setter Property="FontWeight" Value="SemiBold" />
             </Style>

             <!-- Pressed state -->
             <Style Selector="^:pressed">
                 <Setter Property="Background" Value="{StaticResource MainWhite}" />
                 <Setter Property="Foreground" Value="{StaticResource Secondary}" />
             </Style>
         </ControlTheme>

         
     </Application.Resources>
             
</Application>